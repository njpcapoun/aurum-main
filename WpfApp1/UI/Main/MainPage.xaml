<Page x:Class="ClassroomAssignment.UI.Main.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ClassroomAssignment.UI.Main"
      xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
      xmlns:rs="clr-namespace:ClassroomAssignment.Views.RoomSchedule"
      xmlns:model="clr-namespace:ClassroomAssignment.Model"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="MainPage"
      KeepAlive="True"
      x:Name="_this">


    <Page.Resources>
        <CollectionViewSource x:Key="cvsCourses" Source="{Binding Courses}" IsLiveGroupingRequested="True" IsLiveSortingRequested="True">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="State"/>
            </CollectionViewSource.GroupDescriptions>
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="State" Direction="Ascending" />
                <scm:SortDescription PropertyName="CourseName" />
                <scm:SortDescription PropertyName="ClassID_AsInt" Direction="Ascending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        
        <model:Room x:Key="RoomList"/>

        <local:GroupNameConverter x:Key="converter"/>
    </Page.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
       <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,0,0,20">
                <Menu Padding="5">
                    <MenuItem Header="_File">
                        <MenuItem Header="Export Room Schedules" Click="Export_Click"/>
                        <MenuItem Header="Changes" Click="Menu_Changes" />
                        <MenuItem Header="_Save" Click="Menu_Save"/>
                        <MenuItem Header="Save As" Click="SaveAs"/>
                </MenuItem>
                </Menu>
          </StackPanel>

        <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,0,0,20">
            <Menu Padding="5">
                <MenuItem Header="_File">
                    <MenuItem Header="Export Room Schedules" Click="Export_Click"/>
                    <MenuItem Header="Changes" Click="Menu_Changes" />
                    <MenuItem Header="_Save" Click="Menu_Save"/>
                    <MenuItem Header="Save As" Click="SaveAs"/>
                </MenuItem>
            </Menu>

        </StackPanel>

        <Border Grid.Row="1">
            <TabControl RenderTransformOrigin="0.512,0.515">
                <TabItem x:Name="AssignTabItem" Header="Assign">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <DataGrid x:Name="CoursesDataGrid" ItemsSource="{Binding Source={StaticResource cvsCourses}}" AutoGenerateColumns="False" CanUserSortColumns="True" CanUserAddRows="False" >
                            <DataGrid.ContextMenu>
                                <ContextMenu x:Name="CoursesContextMenu" Opened="CoursesContextMenu_Opened">
                                    <MenuItem x:Name="AssignMenuItem" Header="Assign" Click="AssignMenuItem_Click" />
                                    <MenuItem x:Name="CoursesMenuItem" Header="Edit" Click="CoursesMenuItem_Click" />
                                    <MenuItem x:Name="NoAssignmentNeededMenuItem" Header="No Assignment Needed" Click="NoAssignmentNeededMenuItem_Click"/>
                                    <MenuItem x:Name="CrossListMenuItem" Header="CrossList" Click="CrossListMenuItem_Click"/>
                                    <MenuItem x:Name="AssignmentNeeded" Header="Assignment Needed" Click="AssignmentNeeded_Click"/>
                                    <MenuItem x:Name="Unassign" Header="Unassign" Click="Unassign_Click"/>
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                            <DataGrid.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.ContainerStyle>
                                        <Style TargetType="{x:Type GroupItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                                        <Expander IsExpanded="True" >
                                                            <Expander.Header>
                                                                <DockPanel>
                                                                    <TextBlock FontWeight="DemiBold" Text="{Binding Path=Name, Converter={StaticResource converter}}" Margin="0,0,10,0" >
                                                                    </TextBlock>
                                                                    <TextBlock Text="{Binding Path=ItemCount}" />
                                                                </DockPanel>
                                                            </Expander.Header>
                                                            <Expander.Content>
                                                                <ItemsPresenter/>
                                                            </Expander.Content>
                                                        </Expander>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </GroupStyle.ContainerStyle>
                                </GroupStyle>
                            </DataGrid.GroupStyle>
                            <DataGrid.RowHeaderStyle>
                                <Style TargetType="{x:Type DataGridRowHeader}">
                                    <Setter Property="Width" Value="25" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding State}" Value="2">
                                            <Setter Property="Background" Value="Yellow"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding State}" Value="3">
                                            <Setter Property="Background" Value="Green"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding State}" Value="4">
                                            <Setter Property="Background" Value="DimGray"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding State}" Value="0">
                                            <Setter Property="Background" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowHeaderStyle>

                            <DataGrid.Columns>
                                <!--
                                <DataGridTextColumn Header="Class ID" Binding="{Binding ClassID}" IsReadOnly="True" Width="Auto"/>
                                <DataGridTextColumn Header="SIS ID" Binding="{Binding SIS_ID}" IsReadOnly="True" Width="Auto" />
                                <DataGridTextColumn Header="Course ID" Binding="{Binding CatalogNumber}" IsReadOnly="True" Width="Auto"/>
                                -->
                                <DataGridTextColumn Header="Course Name" Binding="{Binding CourseName}" IsReadOnly="True" Width="Auto"/>
                                <DataGridTextColumn Header="Section" Binding="{Binding SectionNumber}" IsReadOnly="True" Width="Auto"/>
                                <DataGridTextColumn Header="Instructor" Binding="{Binding Instructor}" IsReadOnly="True" Width="Auto" />
                                <DataGridTextColumn Header="Instruction Method" Binding="{Binding InstructionMethod}" IsReadOnly="True" Width="Auto" />
                                <DataGridTextColumn Header="Meeting Pattern" Binding="{Binding MeetingPattern}" IsReadOnly="True" Width="Auto" />
                                <DataGridTextColumn Header="Room" Binding="{Binding Room}" IsReadOnly="True" Width="Auto"/>
                                <DataGridTextColumn Header="Room Assignment" Binding="{Binding RoomAssignment}" IsReadOnly="True" Width="Auto"/>
                                <DataGridTextColumn Header="CrossListings" Binding="{Binding CrossListings}" IsReadOnly="True" Width="Auto"/>
                                <DataGridTemplateColumn Header="Linked CrossListed Courses">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>

                                            <StackPanel Orientation="Vertical">
                                                <ComboBox x:Name="CrossListedComboBox" ItemsSource="{Binding CrossListedCourses, Mode=OneWay}" DisplayMemberPath="CourseName" Background="White" SelectedIndex="0">
                                                    <ComboBox.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem x:Name="GoToCourseMenuItem" Header="Go To Course" Click="GoToCourseMenuItem_Click"/>
                                                            <MenuItem x:Name="RemoveCrossListedCourseMenuItem" Header="Remove Course" Click="RemoveCrossListedCourseMenuItem_Click"/>
                                                        </ContextMenu>
                                                    </ComboBox.ContextMenu>
                                                    <ComboBox.ItemContainerStyle>
                                                        <Style TargetType="{x:Type ComboBoxItem}">
                                                            <Setter Property="Background" Value="White" />
                                                        </Style>
                                                    </ComboBox.ItemContainerStyle>
                                                    <ComboBox.Style>
                                                        <Style TargetType="{x:Type ComboBox}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource Self}}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ComboBox.Style>
                                                </ComboBox>
                                                <TextBlock Text="None">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=HasItems, ElementName=CrossListedComboBox}" Value="True">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>

                    </Grid>
                </TabItem>

                <TabItem Header="Room Schedules">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <StackPanel x:Name="ScheduleHeader" Orientation="Horizontal" Grid.Row="0" Margin="0,30,0,0" Grid.Column="0" HorizontalAlignment="Center">
                            <Label Content="Room: "/>
                            <ComboBox ItemsSource="{Binding AllRooms, Mode=OneWay}" SelectedItem="{Binding CurrentRoom, Mode=TwoWay}"  MinWidth="40" IsSynchronizedWithCurrentItem="True"/>
                        </StackPanel>
                        <ScrollViewer x:Name="ScrollViewContainer" Grid.Row="1" HorizontalScrollBarVisibility="Auto" Grid.Column="0" Height="500" HorizontalAlignment="Center">
                            <rs:RoomScheduleControl RoomScheduled="{Binding CurrentRoom, Mode=OneWay}" CoursesForRoom="{Binding CoursesForCurrentRoom, Mode=OneWay}" />
                        </ScrollViewer>
                    </Grid>
                </TabItem>

                <TabItem Header="Edit Room Info">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="56"/>
                            <RowDefinition Height="39*" />
                            <RowDefinition Height="67*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <ListBox Name="listBox" ItemsSource="{Binding AllRooms}" IsSynchronizedWithCurrentItem="True"  SelectedItem="{Binding Path=EditableRoom, Mode=TwoWay}"
                                 SelectionMode="Single" HorizontalAlignment="Left" Height="325" Margin="10,10,0,0" VerticalAlignment="Top" Width="105" Grid.RowSpan="3"
                                 SelectionChanged="ListBox_SelectionChanged"/>
    
                        <WrapPanel Height="354" Margin="125,10,0,0" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Left" Width="660" Orientation="Vertical">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Room #: " HorizontalAlignment="Left" Width="70"/>
                                <Label Name="numberText" Content="{Binding Path=EditableRoom.RoomName, Mode=OneWay}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Capacity: " Width="70"/>
                                <TextBox Name="capacityText" Text="{Binding Path=EditableRoom.Capacity, Mode=OneWay}" Height="24" HorizontalAlignment="Left" Width="70" TextAlignment="Left"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Room Type:" Width="75 "/>
                                <RadioButton Name="Lab"  Content="Lab" GroupName="Type" Margin="0,5,5,0" />
                                <RadioButton Name="Lecture"  Content="Lecture" GroupName="Type"  Margin="0,5,5,0" />
                                <RadioButton Name="Conference"  Content="Conference"  GroupName="Type"  Margin="0,5,5,0" />
                                <RadioButton Name="ITIN"  Content="ITIN" GroupName="Type"  Margin="0,5,5,0" />
                                <RadioButton Name="CYBER"  Content="CYBER" GroupName="Type"  Margin="0,5,5,0"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content= "Details: " Width="70"/>
                                <TextBox Name="detailsText" Text="{Binding Path=EditableRoom.Details, Mode=OneWay}" Height="96" Width="256" TextAlignment="Left" VerticalContentAlignment="Top"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="Save Changes" Name="saveChanges" Margin="5,10,0,0" Click="SaveChanges_Click" />
                            </StackPanel>
                        </WrapPanel>
                        <Button Name="newButton" Content="New" Click="NewButton_Click" Height="24" Width="50" HorizontalAlignment="Left" Margin="10,0,0,10" Grid.Row="2" VerticalAlignment="Bottom"/>
                        <Button Name="removeButton" Content="Remove" Click="RemoveButton_Click" Height="24" Width="50" HorizontalAlignment="Left" Margin="65,0,0,10" Grid.Row="2" VerticalAlignment="Bottom"/>
                    </Grid>
                </TabItem>


            </TabControl>
        </Border>

        <ListView x:Name="ConflictsListView" ItemsSource="{Binding Conflicts}" MouseDoubleClick="ConflictsListView_MouseDoubleClick"  MinHeight="60" MaxHeight="225" Grid.Row="2" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto">
            <ListView.Style>
                <Style TargetType="{x:Type ListView}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsSelected, ElementName=AssignTabItem, Mode=OneWay}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected, ElementName=AssignTabItem, Mode=OneWay}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.Style>
            <ListView.ItemTemplate>
                <DataTemplate x:Name="ConflictTemplate">
                    <Label Content="{Binding Description}"></Label>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <StackPanel  x:Name="SearchHeader" Orientation="Horizontal"  Grid.Row="0" Margin="0,10,100,0" Grid.Column="0" HorizontalAlignment="Right">
            <Label Content="Search: "/>
            <TextBox Name="CourseSearch" HorizontalAlignment="Left" Height="23" Margin="0,0,50,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="200" MaxLength="50" TextChanged="CourseSearch_TextChanged"/>
        </StackPanel>
    </Grid>


</Page>
