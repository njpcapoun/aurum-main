<Page x:Class="ClassroomAssignment.UI.Ambiguity.AmbiguityResolverPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ClassroomAssignment.UI.Ambiguity"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="AmbiguityResolverPage"
      ShowsNavigationUI="False"
      x:Name="_this">

    <Page.Resources>
        <Style x:Key="ReadOnlyCell" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Setter Property="IsEnabled" Value="False"/>
            <Style.Triggers>

            </Style.Triggers>

        </Style>
    </Page.Resources>

    <StackPanel Orientation="Vertical" Margin="0,0,0,25">

        <Grid Height="675">
            <DataGrid x:Name="CoursesDataGrid" CanUserAddRows="False"  AutoGenerateColumns="False" ItemsSource="{Binding}" Margin="0,0,0,37">

                <DataGrid.Columns>
                    <DataGridTextColumn Header="Class ID" Binding="{Binding ClassID}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Course Name" Binding="{Binding CourseName}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Meeting Pattern" Binding="{Binding MeetingPattern}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Room" Binding="{Binding Room}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Campus" Binding="{Binding Campus}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Comments" Binding="{Binding Comments}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Notes" Binding="{Binding Notes}" IsReadOnly="True"/>
                 
                    <DataGridCheckBoxColumn x:Name="NeedsRoomCheckBox" Header="Needs Room" Binding="{Binding NeedsRoom, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False"/>
                   
                    <DataGridTemplateColumn Header="Room Assignment">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding RoomOptions, ElementName=_this, Mode=OneWay}" SelectedItem="{Binding RoomAssignment, Mode=OneTime}" SelectionChanged="ComboBox_SelectionChanged">
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding NeedsRoom, Mode=TwoWay}" Value="False">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                    <Setter Property="Background" Value="LightGray"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding NeedsRoom, Mode=TwoWay}" Value="True">
                                                    <Setter Property="IsEnabled" Value="True" />
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

        </Grid>
        <Button x:Name="ContinueButton" Content="Continue" HorizontalAlignment="Center" VerticalAlignment="Center" Click="ContinueButton_Click" Margin="374,-30"/>
    </StackPanel>
</Page>
